-*- outline -*-

* TO DO

** [ ] Refine the content of a result set

Create a result set. Perform a query on its content. All queries
available on a full database must be available on a result set.

** [ ] Merge two result sets

Create two result sets A and B. Merge the content of B into A. There
are no duplicates in A, and B is left unchanged.

** [ ] Search on a specific attribute.

Queries are dependent on the type of the attribute being searched (for
instance, dates can be searched by intervals,...). It is possible to
search on indexed and non-indexed attributes.

** [ ] Specific attributes can be indexed

Index information is part of the schema. These indexes are used when
searching for a specific attribute value.

** [X] Import the XML into any Store

Create an empty Store of every existing type. Import an existing XML
database into it, with no loss.

** [ ] Support "shortcuts" for persons and texts

When a phrase or person name is repeated frequently, a shortcut can be
defined, and used in place of the corresponding attribute. When the
shortcut content is updated, all the entries that used it are also
updated.

* DONE

** [X] BibTeX keys and document classes are attributes.

The BibTeX key is an attribute of type ID that is part of the entry
description.  Similarly, the Document Class is an Enumerated value.

** [X] There are Permanent Result Sets.

They are stored in the XML format and in the storages.

** [X] Manually add / remove items in a result set

Create an empty result set. Add items in it and remove them. It is not
possible to duplicate items in a result set.

** [X] Schemas checks

Schemas contain information about attributes (type, cardinality,...),
so that an attribute can have exactly one occurence, O..N, 1..N,
... Inserting/updating an entry in the database cannot occur if the
entry does not match the schema definition.

** [X] Update result sets when the database is changed.

When an item is removed from the database, it must not be referenced
in any result set anymore.

** [X] Maintain coherency between enumerated definitions and use

Refuse to remove an enumerated value as long as there is one use in
the database. Refuse to add a group twice.

** [X] Multiple users accesses cannot corrupt a DB3 database

Serial IDs are delivered atomically, and updates are transactional.

